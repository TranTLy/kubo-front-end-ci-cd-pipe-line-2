pipeline{
    agent any
    stages{
        // stage('Install'){
        //     steps{
        //         bat 'npm install'
        //     }
        // }
        // // stage('test'){
        // //     steps{
        // //         bat 'npm test -- --no-watch'
        // //     }
        // // }
        // stage('Build'){
        //     steps{
        //         bat 'npm run build'
        //     }
        // }
        stage('Deploy') {
      // TODO. Use env.BRANCH_NAME to make sure we only deploy from master
        //   withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'Heroku Git Login', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD']]) {
        //    sh('git push https://${GIT_USERNAME}:${GIT_PASSWORD}@git.heroku.com/myapp-production.git HEAD:refs/heads/master')
          steps{
          withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'heroku-git-login',
           usernameVariable: 'tranly237@gmail.com', passwordVariable: 'Testjenkins@1']]) {
                // bat "echo 'machine git.heroku.com login $USERNAME password $PASSWORD' > ~/.netrc"
                // bat "chmod 600 ~/.netrc"
                bat "git push -f https://git.heroku.com/kubo-front-end-ci-cd.git HEAD:master"

            //   bat ('''
            //     git config user.name 'TranTLy'
            //     git config user.email 'tranly237@gmail.com'
            // ''')
        //    bat ('git push https://${tranly237@gmail.com}:${Testjenkins@1}@git.heroku.com/myapp-production.git HEAD:refs/heads/master')
        //    bat ('git push https://git.heroku.com/kubo-front-end-ci-cd.git HEAD:refs/heads/master')
        //    bat ('git push https://git.heroku.com/kubo-front-end-ci-cd.git HEAD:refs/heads/master')

          }
          }
            // steps {
            //     bat 'git push https://git.heroku.com/kubo-front-end-ci-cd.git HEAD:master'

            // }
          }
    }
    post {
        // always {
        //     mail to: 'sofiaandyalikesi@gmail.com',
        //         subject: 'Demo CI/CD with Jenkins pipeline',
        //         body: 'Project was built'
        // }
         always {
            mail to: 'sofiaandyalikesi@gmail.com',
                subject: 'Demo CI/CD with Jenkins pipeline',
                body: """<p>${status}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
            <p>Check console output at <a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a></p>"""
        }
        //  failed {
        //     mail to: 'sofiaandyalikesi@gmail.com',
        //         subject: 'Demo CI/CD with Jenkins pipeline',
        //         body: """<p>${status}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
        //     <p>Check console output at <a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a></p>"""
        // }
    }
} 
